{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\n\nfunction TodoComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" No todo items found. Create a new one! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"label-success\": a0,\n    \"label-warning\": a1\n  };\n};\n\nfunction TodoComponent_table_12_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 15);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 15);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelementStart(8, \"span\", 16);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 17);\n    i0.ɵɵelementStart(11, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function TodoComponent_table_12_tr_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const todo_r3 = restoredCtx.$implicit;\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.editTodo(todo_r3, i_r4);\n    });\n    i0.ɵɵelement(12, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const todo_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, todo_r3.completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(todo_r3.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, todo_r3.completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(todo_r3.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c1, todo_r3.completed, !todo_r3.completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", todo_r3.completed ? \"Completed\" : \"Pending\", \" \");\n  }\n}\n\nfunction TodoComponent_table_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table\", 11);\n    i0.ɵɵelementStart(1, \"thead\");\n    i0.ɵɵelementStart(2, \"tr\");\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Title \");\n    i0.ɵɵelementStart(7, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TodoComponent_table_12_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.toggleSortField(\"TITLE\");\n    });\n    i0.ɵɵelement(8, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Description \");\n    i0.ɵɵelementStart(11, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TodoComponent_table_12_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.toggleSortField(\"DESCRIPTION\");\n    });\n    i0.ɵɵelement(12, \"span\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Actions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"tbody\");\n    i0.ɵɵtemplate(18, TodoComponent_table_12_tr_18_Template, 13, 14, \"tr\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.todos);\n  }\n}\n\nexport let TodoComponent = /*#__PURE__*/(() => {\n  class TodoComponent {\n    constructor(http) {\n      this.http = http;\n      this.todos = [];\n      this.newTodo = {\n        id: 0,\n        title: '',\n        description: '',\n        completed: false\n      };\n      this.editMode = false;\n      this.editIndex = -1;\n      this.sortField = 'ID';\n      this.sortOrder = 'asc';\n      this.nextPage = 1;\n      this.showNext = false;\n      this.showPrev = false;\n    }\n\n    ngOnInit() {\n      this.loadTodos();\n    }\n\n    loadTodos() {\n      this.http.get(`api/todos/sort/${this.sortField}/${this.sortOrder}/${this.nextPage}`).subscribe(data => {\n        this.todos = data;\n        this.showNext = this.todos.length > 9;\n        this.showPrev = this.nextPage > 1;\n      }, error => {\n        alert('Failed to load todos. Check console for details.');\n        console.error(error);\n      });\n    }\n\n    saveTodo() {\n      if (!this.newTodo.title) {\n        alert('Title is required!');\n        return;\n      }\n\n      if (this.editMode) {\n        this.updateTodo();\n      } else {\n        this.createTodo();\n      }\n    }\n\n    createTodo() {\n      this.http.post('api/todos', this.newTodo).subscribe(data => {\n        this.todos.push(data);\n        this.resetForm();\n      }, error => {\n        alert('Failed to create todo. Check console for details.');\n        console.error(error);\n      });\n    }\n\n    updateTodo() {\n      this.http.put(`api/todos/${this.newTodo.id}`, this.newTodo).subscribe(data => {\n        if (this.editIndex > -1) {\n          this.todos[this.editIndex] = data;\n        }\n\n        this.resetForm();\n      }, error => {\n        alert('Failed to update todo. Check console for details.');\n        console.error(error);\n      });\n    }\n\n    deleteTodo(id, index) {\n      if (confirm('Are you sure you want to delete this todo?')) {\n        this.http.delete(`api/todos/${id}`).subscribe(() => {\n          this.todos.splice(index, 1);\n        }, error => {\n          alert('Failed to delete todo. Check console for details.');\n          console.error(error);\n        });\n      }\n    }\n\n    toggleStatus(todo) {\n      const originalStatus = todo.completed;\n      todo.completed = !todo.completed;\n      this.http.put(`api/todos/${todo.id}/toggle`, {}).subscribe(data => {\n        Object.assign(todo, data);\n      }, error => {\n        alert('Failed to update todo status. Check console for details.');\n        console.error(error);\n        todo.completed = originalStatus;\n      });\n    }\n\n    editTodo(todo, index) {\n      this.newTodo = Object.assign({}, todo);\n      this.editMode = true;\n      this.editIndex = index;\n    }\n\n    cancelEdit() {\n      this.resetForm();\n    }\n\n    resetForm() {\n      this.newTodo = {\n        id: 0,\n        title: '',\n        description: '',\n        completed: false\n      };\n      this.editMode = false;\n      this.editIndex = -1;\n    }\n\n    toggleNextPage() {\n      this.nextPage++;\n      this.loadTodos();\n      this.resetForm();\n    }\n\n    togglePrevPage() {\n      if (this.nextPage > 1) {\n        this.nextPage--;\n        this.loadTodos();\n        this.resetForm();\n      }\n    }\n\n    toggleSortField(newField) {\n      if (this.sortField === newField) {\n        this.toggleSortOrder();\n      } else {\n        this.sortOrder = 'asc';\n      }\n\n      this.sortField = newField;\n      this.loadTodos();\n      this.resetForm();\n    }\n\n    toggleSortOrder() {\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    }\n\n  }\n\n  TodoComponent.ɵfac = function TodoComponent_Factory(t) {\n    return new (t || TodoComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  TodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoComponent,\n    selectors: [[\"app-todo\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"panel\", \"panel-primary\"], [1, \"panel-heading\"], [1, \"panel-title\"], [1, \"panel-body\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-plus\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"class\", \"table table-striped table-hover\", 4, \"ngIf\"], [1, \"alert\", \"alert-info\"], [1, \"table\", \"table-striped\", \"table-hover\"], [1, \"btn\", \"btn-xs\", \"btn-danger\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-sort\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"label\", 3, \"ngClass\"], [1, \"task-actions\"], [1, \"btn\", \"btn-xs\", \"btn-info\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-eye-open\"]],\n    template: function TodoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h3\", 4);\n        i0.ɵɵtext(5, \"Todo List (Angular View)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_7_listener() {\n          ctx.editMode = false;\n          return ctx.resetForm();\n        });\n        i0.ɵɵelement(8, \"span\", 7);\n        i0.ɵɵtext(9, \" Add New Todo \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"hr\");\n        i0.ɵɵtemplate(11, TodoComponent_div_11_Template, 2, 0, \"div\", 8);\n        i0.ɵɵtemplate(12, TodoComponent_table_12_Template, 19, 1, \"table\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.todos.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.todos.length > 0);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf, i2.NgClass],\n    styles: [\".completed[_ngcontent-%COMP%]{text-decoration:line-through;color:gray}.label-success[_ngcontent-%COMP%]{background-color:#5cb85c;color:#fff;padding:2px 6px;border-radius:4px}.label-warning[_ngcontent-%COMP%]{background-color:#f0ad4e;color:#fff;padding:2px 6px;border-radius:4px}.task-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:5px}.btn-xs[_ngcontent-%COMP%]{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.btn-primary[_ngcontent-%COMP%]{background-color:#337ab7;border-color:#2e6da4;color:#fff}.btn-info[_ngcontent-%COMP%]{background-color:#5bc0de;border-color:#46b8da;color:#fff}.btn-success[_ngcontent-%COMP%]{background-color:#5cb85c;border-color:#4cae4c;color:#fff}.btn-warning[_ngcontent-%COMP%]{background-color:#f0ad4e;border-color:#eea236;color:#fff}.btn-danger[_ngcontent-%COMP%]{background-color:#d9534f;border-color:#d43f3a;color:#fff}.glyphicon[_ngcontent-%COMP%]{margin-right:3px}\"]\n  });\n  return TodoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}